/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Interfaces;

import Clases.Comprobacion;
import Clases.Objetos.Actividad;


import Repository.impl.ApiRestRepository;

import java.util.Date;

import java.util.Map;

import javax.swing.JOptionPane;



/**
 * Interfaz principal de la aplicaci칩n.
 * @author israelmedrano
 */
public class RegistroActividades extends javax.swing.JDialog {

    /**
     * Creates new form Principal
     */
    public RegistroActividades(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
         cargarInstructores();
  
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        foto = new javax.swing.JLabel();
        foto2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cbxHora = new javax.swing.JComboBox<>();
        cbxLugar = new javax.swing.JComboBox<>();
        cbxPuntoSalida = new javax.swing.JComboBox<>();
        cbxInstructores = new javax.swing.JComboBox<>();
        cbxTipoSalida = new javax.swing.JComboBox<>();
        boxFecha = new com.toedter.calendar.JDateChooser();
        cbxMinutos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Amatic SC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SubApp");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(438, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(291, 291, 291)
                .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jButton1.setText("Registrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha");

        jLabel3.setText("Hora");

        jLabel4.setText("Instructor");

        jLabel5.setText("Punto de salida");

        jLabel6.setText("Lugar");

        jLabel7.setText("Tipo de salida");

        cbxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21" }));

        cbxLugar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Roca blanca", "Ca침칩n azul", "Pecio rojo", "Cuerno verde" }));

        cbxPuntoSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Playa", "Barca", "Nocturna" }));

        cbxInstructores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));

        cbxTipoSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Guiada", "Open", "Especialidad", "Formaci칩n" }));

        cbxMinutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "00", "15", "30", "45" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxLugar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxPuntoSalida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxInstructores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxTipoSalida, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(cbxHora, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbxMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(boxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbxLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbxPuntoSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxInstructores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbxTipoSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
registrar();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegistroActividades dialog = new RegistroActividades(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser boxFecha;
    private javax.swing.JComboBox<String> cbxHora;
    private javax.swing.JComboBox<String> cbxInstructores;
    private javax.swing.JComboBox<String> cbxLugar;
    private javax.swing.JComboBox<String> cbxMinutos;
    private javax.swing.JComboBox<String> cbxPuntoSalida;
    private javax.swing.JComboBox<String> cbxTipoSalida;
    private javax.swing.JLabel foto;
    private javax.swing.JLabel foto2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
    private Map<String, Integer> instructoresMap;
    private int instructor;
    ApiRestRepository repositorio = new ApiRestRepository();
    
/**
 * Carga la lista de instructores desde el repositorio y los agrega al JComboBox de instructores.
 *
 * Este m칠todo obtiene un mapa de instructores del repositorio y a침ade
 * cada uno de los nombres al JComboBox correspondiente, permitiendo que el usuario
 * seleccione un instructor de la lista cargada.
 *
 * @see ApiRestRepository
 */
public void cargarInstructores() {
    instructoresMap = repositorio.cargaInstructores();

    for (String nombre : instructoresMap.keySet()) {
        cbxInstructores.addItem(nombre);
    }
}

/**
 * Registra una nueva actividad de buceo obteniendo los datos introducidos en el formulario.
 *
 * Este m칠todo valida que todos los campos necesarios para registrar una actividad
 * est치n debidamente seleccionados o rellenados. Si alg칰n campo es inv치lido o est치 vac칤o,
 * se muestra una alerta correspondiente al usuario. Una vez que todas las validaciones son exitosas,
 * se crea una nueva instancia de {@link Actividad} con los datos proporcionados. Finalmente,
 * intenta registrar la actividad en el repositorio. Se muestra un mensaje al usuario
 * indicando si el registro fue exitoso o no.
 *
 * @throws IllegalArgumentException si alguno de los datos proporcionados es inv치lido.
 *                                   (Nota: Puedes ajustar esto seg칰n tus necesidades de manejo de errores).
 *
 * @see Actividad
 * @see ApiRestRepository
 */
public void registrar() {
    if (Comprobacion.select(cbxHora)) Comprobacion.alertaSelect(this, cbxHora);
    else if (Comprobacion.select(cbxMinutos)) Comprobacion.alertaSelect(this, cbxMinutos);
    else if (Comprobacion.fechaVacia(boxFecha)) Comprobacion.alertaFechaVacia(this, boxFecha);
    else if (Comprobacion.select(cbxLugar)) Comprobacion.alertaSelect(this, cbxLugar);
    else if (Comprobacion.select(cbxPuntoSalida)) Comprobacion.alertaSelect(this, cbxPuntoSalida);
    else if (Comprobacion.select(cbxInstructores)) Comprobacion.alertaSelect(this, cbxInstructores);
    else if (Comprobacion.select(cbxTipoSalida)) Comprobacion.alertaSelect(this, cbxTipoSalida);
    else {
        String hora = cbxHora.getSelectedItem().toString() + ":" + cbxMinutos.getSelectedItem().toString();
        Date fecha = boxFecha.getDate();
        int instructor = seleccionaInstructor();
        
        Actividad salida = new Actividad(
            0,
            fecha,
            hora,
            cbxLugar.getSelectedItem().toString(),
            cbxPuntoSalida.getSelectedItem().toString(),
            instructor,
            cbxTipoSalida.getSelectedItem().toString()
        );

        if (repositorio.registrar_salida_buceo(salida))
            JOptionPane.showMessageDialog(this, "Registrado");
        else
            JOptionPane.showMessageDialog(this, "No registrado");
    } // Fin del 칰ltimo ELSE 
}

/**
 * Selecciona el ID del instructor basado en la selecci칩n actual en el JComboBox de instructores.
 *
 * Este m칠todo recorre el mapa de instructores buscando una coincidencia entre
 * el nombre seleccionado en el JComboBox y los nombres en el mapa. Si se encuentra
 * una coincidencia, devuelve el ID correspondiente del instructor.
 *
 * @return el ID del instructor seleccionado en el JComboBox, o -1 si no se encuentra.
 * 
 * @see ApiRestRepository
 */
public int seleccionaInstructor() {
    int instructor = -1; // Valor por defecto en caso de no encontrar al instructor
    
    for (Map.Entry<String, Integer> entrada : instructoresMap.entrySet()) {
        if (entrada.getKey().equals(cbxInstructores.getSelectedItem().toString())) {
            instructor = entrada.getValue();
            System.out.println(instructor);
            break;
        }
    }
    
    return instructor;
}
}